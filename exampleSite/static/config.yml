backend:
  name: git-gateway
  branch: master # Branch to update (optional; defaults to master)

publish_mode: editorial_workflow
media_folder: "static/images/uploads" # Media files will be stored in the repo under static/images/uploads
public_folder: "/images/uploads" # The src attribute for uploaded media will begin with /images/uploads

collections:
  -name: "blog"
  label: "blogpost"
  folder: "content/posts"
  create: "true"
  slug: "{{slug}}"

  fields: # The fields for each document, usually in front matter
      - {label: "Author", name: "author", widget: "string"}
      - {label: "Title", name: "title", widget: "string"}
      - {label: "Publish Date", name: "date", widget: "datetime"}
      - {label: "Description", name: "description", widget: "string"}
      - {label: "Tags", name: "tags", widget: "list"}
      - {label: "Categories", name: "categories", widget: "list"}
      - {label: "Featured Image", name: "image", widget: "image"}
      - {label: "Katex", name: "math", widget: "boolean"}
      - {label: "Body", name: "body", widget: "markdown"}


Let's break that down:

name	Post type identifier, used in routes. Must be unique.
label	What the admin UI calls the post type.
folder	Where files of this type are stored, relative to the repo root.
create	Set to true to allow users to create new files in this collection.
slug	Template for filenames. {{year}}, {{month}}, and {{day}} pulls from the post's date field or save date. {{slug}} is a url-safe version of the post's title. Default is simply {{slug}}.
fields	Fields listed here are shown as fields in the content editor, then saved as front matter at the beginning of the document (except for body, which follows the front matter). Each field contains the following properties:
label: Field label in the editor UI.
name: Field name in the document front matter.
widget: Determines UI style and value data type (details below).
default (optional): Sets a default value for the field.
